.board {
  --cell-size: 3rem;
  display: grid;
  grid-template-columns: repeat(6, var(--cell-size));
  grid-template-rows: repeat(6, var(--cell-size));
  place-content: center;
  gap: 1rem;
  color: var(--clr-text-primary);
}
.board svg {
  width: 1.5rem;
  height: 1.5rem;
}
.board button {
  border-radius: 0.25rem;
  border: none;
  outline: none;
  display: grid;
  place-content: center;
  border-radius: 0.25rem;
}
.gameButton {
  background-color: var(--clr-activate);
  color: var(--clr-text-activate);
}
.gameButton:is(:hover, :focus, :active) {
  background-color: var(--clr-activate-on);
}
.score {
  place-self: center;
}
.timer {
  grid-column: span 4;
  place-self: center;
}
.rotateButton, .submitButton {
  grid-row: span 2;
  background-color: var(--clr-btn);
  color: var(--clr-text-primary);
}
.gameTiles {
  grid-row: span 4;
  grid-column: span 4;
}
.loading {
  margin-right: 0.5rem;
  animation: spin 1s linear infinite;
  fill: var(--clr-activate);
}
.clearButton, .clearButtonActive {
  grid-row: span 2;
  background-color: var(--clr-clear);
  color: var(--clr-text-primary);
}
.clearButton:is(:hover, :focus, :active), .clearButtonActive {
  background-color: var(--clr-clear-on);
}
.game {
  grid-column: span 4;
  grid-row: span 4;
  display: grid;
  grid-template-columns: repeat(4, var(--cell-size));
  grid-template-rows: repeat(4, var(--cell-size));
  place-content: center;
  gap: 1rem;
  overflow: hidden;
}
.gameTile {
  place-items: center;
  position: relative;
}
.gameTile button {
  position: absolute;
  z-index: 4;
  top: 0;
  right: 0;
  bottom: 0; 
  left: 0;
  background-color: var(--clr-tile);
  color: var(--clr-text-primary);
}
.tile_top_left,
.tile_top,
.tile_top_right,
.tile_left,
.tile_right,
.tile_bottom_left,
.tile_bottom,
.tile_bottom_right {
  position: absolute;
  width: 100%;
  height: 2px;
  background-color: green;
}
.tile_top_left {
  transform: translate(-50%, -50%) rotate(45deg);
}
.tile_top {
  transform: rotate(90deg);
}
.tile_top_right {
  transform: translate(50%, -50%) rotate(-45deg);
}
.tile_left {
  top: 50%;
  left: -50%;
  transform: translateY(-50%);
}
.tile_right {
  top: 50%;
  right: -50%;
  transform: translateY(-50%);
}
.tile_bottom_left {
  bottom: 0;
  transform: translate(-50%, 50%) rotate(-45deg);
}
.tile_bottom {
  bottom: 0;
  transform: rotate(90deg);
}
.tile_bottom_right {
  bottom: 0;
  transform: translate(50%, 50%) rotate(45deg);
}

.gameTile:is(:hover, :focus, :active) {
  background-color: var(--clr-tile-on);
}
.currentWord {
  grid-column: span 6;
  background-color: var(--clr-btn);
  border-radius: 0.25rem;
  text-transform: uppercase;
  display: flex;
  justify-content: center;
  align-items: center;
}
.adjacentTile {
  background-color: var(--clr-tile-adj);
}
.adjacentTile:is(:hover, :focus, :active) {
  background-color: var(--clr-tile-adj-on);
  color: var(--clr-text-inverted);
}
.selectedTile {
  background-color: var(--clr-tile-selected);
}
.selectedTile:is(:hover, :focus, :active) {
  background-color: var(--clr-tile-selected-on);
  color: var(--clr-text-inverted);
}

.animateWiggle {
  animation: wiggle 200ms ease-in-out;
}
.animatePulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.warning { color: var(--clr-text-warn); }
.danger { color: var(--clr-text-danger); }
.insetShadow {
  background-color: linear-gradient(-45deg, rgb(0, 0, 0), rgb(255, 255, 255));
  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25),
    -2px -2px 3px 0 rgba(255, 255, 255, 0.3);
}

.insetShadow:is(:hover, :focus, :active) {
  box-shadow: inset 2px 2px 3px 0 rgba(0, 0, 0, 0.2),
    inset -2px -2px 3px 0 rgba(255, 255, 255, 0.5);
}


@keyframes pulse {
  50% { opacity: .5; }
}
@keyframes spin {
  to { transform: rotate(360deg); }
}
@keyframes wiggle {
  0%, 100% { transform: rotate(-5deg); }
  50% { transform: rotate(5deg); }
}